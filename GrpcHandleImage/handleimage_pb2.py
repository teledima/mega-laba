# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: handleimage.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='handleimage.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x11handleimage.proto\"E\n\rResizeRequest\x12\r\n\x05image\x18\x01 \x01(\t\x12\x11\n\tnew_width\x18\x02 \x01(\x05\x12\x12\n\nnew_height\x18\x03 \x01(\x05\"\x16\n\x05Image\x12\r\n\x05image\x18\x01 \x01(\t\"\x14\n\x04Hash\x12\x0c\n\x04hash\x18\x01 \x01(\t2I\n\x0bHandleImage\x12\x18\n\x07GetHash\x12\x06.Image\x1a\x05.Hash\x12 \n\x06Resize\x12\x0e.ResizeRequest\x1a\x06.Imageb\x06proto3'
)




_RESIZEREQUEST = _descriptor.Descriptor(
  name='ResizeRequest',
  full_name='ResizeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='image', full_name='ResizeRequest.image', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='new_width', full_name='ResizeRequest.new_width', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='new_height', full_name='ResizeRequest.new_height', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21,
  serialized_end=90,
)


_IMAGE = _descriptor.Descriptor(
  name='Image',
  full_name='Image',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='image', full_name='Image.image', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=92,
  serialized_end=114,
)


_HASH = _descriptor.Descriptor(
  name='Hash',
  full_name='Hash',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='hash', full_name='Hash.hash', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=116,
  serialized_end=136,
)

DESCRIPTOR.message_types_by_name['ResizeRequest'] = _RESIZEREQUEST
DESCRIPTOR.message_types_by_name['Image'] = _IMAGE
DESCRIPTOR.message_types_by_name['Hash'] = _HASH
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ResizeRequest = _reflection.GeneratedProtocolMessageType('ResizeRequest', (_message.Message,), {
  'DESCRIPTOR' : _RESIZEREQUEST,
  '__module__' : 'handleimage_pb2'
  # @@protoc_insertion_point(class_scope:ResizeRequest)
  })
_sym_db.RegisterMessage(ResizeRequest)

Image = _reflection.GeneratedProtocolMessageType('Image', (_message.Message,), {
  'DESCRIPTOR' : _IMAGE,
  '__module__' : 'handleimage_pb2'
  # @@protoc_insertion_point(class_scope:Image)
  })
_sym_db.RegisterMessage(Image)

Hash = _reflection.GeneratedProtocolMessageType('Hash', (_message.Message,), {
  'DESCRIPTOR' : _HASH,
  '__module__' : 'handleimage_pb2'
  # @@protoc_insertion_point(class_scope:Hash)
  })
_sym_db.RegisterMessage(Hash)



_HANDLEIMAGE = _descriptor.ServiceDescriptor(
  name='HandleImage',
  full_name='HandleImage',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=138,
  serialized_end=211,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetHash',
    full_name='HandleImage.GetHash',
    index=0,
    containing_service=None,
    input_type=_IMAGE,
    output_type=_HASH,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='Resize',
    full_name='HandleImage.Resize',
    index=1,
    containing_service=None,
    input_type=_RESIZEREQUEST,
    output_type=_IMAGE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_HANDLEIMAGE)

DESCRIPTOR.services_by_name['HandleImage'] = _HANDLEIMAGE

# @@protoc_insertion_point(module_scope)
